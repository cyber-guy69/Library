@inject AuthorService AuthorService
@inject NavigationManager NavigationManager


@using LibraryWeb.Models
@using LibraryWeb.Services


@page "/authors/create"

@code {
	private Author NewAuthor = new Author();
	private List<string> validationErrors = new List<string>();

	private async Task HandleSubmit()
	{
		try
		{
			validationErrors.Clear();
			var errors = await AuthorService.CreateAuthorAsync(NewAuthor);
			if (errors.Count > 0)
			{
				validationErrors = errors;

			}
			else
			{
				NavigationManager.NavigateTo("/authors");
			}


		}
		catch (Exception ex)
		{
			validationErrors.Add("An error occurred while creating the author. Wrong Name or Surname Format");
		}
	}
}
<h1>Create Author</h1>
@if (validationErrors.Count > 0)
{
	<div class="aler alert-danger">
		<ul>
			@foreach (var error in validationErrors)
			{
				<li>@error</li>
			}
		</ul>

	</div>
}

<EditForm Model="@NewAuthor" OnValidSubmit="@HandleSubmit">
	<ValidationSummary />
	<div class="form-group">
		<label for="name">Name:</label>
		<InputText id="name" @bind-Value="NewAuthor.Name" class="form-control" />
		<ValidationMessage For="@(() => NewAuthor.Name)" />
	</div>
	<div class="form-group">
		<label for="surname">Surname:</label>
		<InputText id="surname" @bind-Value="NewAuthor.Surname" class="form-control" />
		<ValidationMessage For="@(() => NewAuthor.Surname)" />
	</div>
	<button type="submit" class="btn btn-primary">Create</button>
</EditForm>